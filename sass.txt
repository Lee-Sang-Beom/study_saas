[ css와 sass ]
- css는 규모가 커질수록 코드는 복잡해지고, 유지보수는 불편해진다.
  sass는 코드를 수정하거나, 코드 조각을 재사용하기 편리하다.

[ sass란? ]
- css의 단점을 메워 더 빠르고 효율적으로 스타일을 작성할 수 있는 구문이자, css 전처리기
- sass는 css코드를 효율적으로 작성하기 위해 사용하는 프로그래밍 언어!

- css코드를 만들기 위해 코딩 언어로써 역할을 하는 것이 sass
  * 같은 스타일을 작성한다 해도, css보다 sass를 쓰는게 간결하고 빠르게 코드를 작성할 수 있기 때문에 사용

[ 과정 ]
- sass 구문에 맞게 코드 작성
- sass 전처리기에 의해 css코드로 변환된다
- 변환을 마치고, css 파일이 생성된다.
- 이러한 과정이 '컴파일'
- 컴파일 과정이 있어야 하는 이유는, 브라우저는 saas구문을 이해할 수 없기 때문임

[ sass? scss? ]
- sass구문으로 코드작성 시, sass전처리기가 이를 css로 변환한다 했음
- 그런데, sass구문과 동일한 기능을 제공하고, 동시에 좀 더 친화적인 구문인 scss라는 것도 있음

- scss구문으로 코드를 작성하면 sass전처리기는 이 또한 css로 변환
- 그리고 사람들은 sass보다 scss구문을 선호하는 경향이 있음

[ 실행 ]
- saas구문 기반으로 작성된 코드는 saas전처리기와 컴파일러의 도움을 받아, css파일로 빌드된다. 
- 따라서 pc에서는 saas를 css로 빌드할 수 있는 도구가 준비되어있어야 한다.